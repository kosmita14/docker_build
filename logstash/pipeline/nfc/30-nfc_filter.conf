filter {
  grok{
    match => [
       "message", "%{GREEDYDATA:logtimestamp} \[%{NOTSPACE:thread_name}\] %{NOTSPACE:log_level}[ \t]+%{NOTSPACE:class} - %{NOTSPACE:component_name} \| CorrId=%{NOTSPACE:corr_id} \| URI=%{NOTSPACE:uri} \| Method=%{NOTSPACE:method} \| SessionId=%{NOTSPACE:session_id} \| UserId=%{NOTSPACE:user_id} \| %{NOTSPACE:message_type} \| %{NUMBER:response_code} \| %{NUMBER:response_interval}ms.*Response headers:\{(?<message_header>[^}]*)\}%{GREEDYDATA:message_body}",
       "message", "%{GREEDYDATA:logtimestamp} \[%{NOTSPACE:thread_name}\] %{NOTSPACE:log_level}[ \t]+%{NOTSPACE:class} - %{NOTSPACE:component_name} \| CorrId=%{NOTSPACE:corr_id} \| URI=%{NOTSPACE:uri} \| Method=%{NOTSPACE:method} \| SessionId=%{NOTSPACE:session_id} \| UserId=%{NOTSPACE:user_id} \| %{NOTSPACE:message_type}.*(Response|Request) headers:\{(?<message_header>[^}]*)\}%{GREEDYDATA:message_body}",
       "message", "%{GREEDYDATA:logtimestamp} \[%{NOTSPACE:thread_name}\] %{NOTSPACE:log_level}[ \t]+%{NOTSPACE:class} - %{NOTSPACE:component_name} \| Ver=%{NOTSPACE:ver} \| CorrId=%{NOTSPACE:corr_id} \| URI=%{NOTSPACE:uri} \| Method=%{NOTSPACE:method} \| %{NOTSPACE:ip} \| %{NOTSPACE:message_type} \| %{NUMBER:response_code} \| %{NUMBER:response_interval}ms.*Response headers:\{(?<message_header>[^}]*)\}[ \t]*%{GREEDYDATA:message_body}",
       "message", "%{GREEDYDATA:logtimestamp} \[%{NOTSPACE:thread_name}\] %{NOTSPACE:log_level}[ \t]+%{NOTSPACE:class} - %{NOTSPACE:component_name} \| Ver=%{NOTSPACE:ver} \| CorrId=%{NOTSPACE:corr_id} \| URI=%{NOTSPACE:uri} \| Method=%{NOTSPACE:method} \| %{NOTSPACE:ip} \| (Response|Request) headers:[ \t]*\{(?<message_header>[^}]*)\}[ \t]*%{GREEDYDATA:message_body}",
       "message", "%{GREEDYDATA:logtimestamp} \[%{NOTSPACE:thread_name}\] %{NOTSPACE:log_level}[ \t]+%{NOTSPACE:class} - %{GREEDYDATA:text}"
    ]
    remove_field => [ "message" ]
  }
  
  json {
    source => "message_body"
    target => "message_body_json"
    skip_on_invalid_json => "true"
  }
}


