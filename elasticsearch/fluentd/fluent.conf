#<source>
#  @type  tail
#  path /log/r24*.log
#  read_from_head true
#  pos_file /tmp/r24.log.pos
#  <parse>
#    @type multiline
#    format_firstline /^\d{4}-\d{2}-\d{2}/
#    format1 /^(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) (?<thread>\[.*\])[\s]+(?<level>[A-Z]+)[\s]+(?<message>.*)/
#    keep_time_key true
#  </parse>
#  tag input.file.r24
#</source>

#<source>
#  @type  tail
#  path /log/*latency*.log
#  read_from_head true
#  pos_file /tmp/latency.log.pos
#  <parse>
#    @type none
#  </parse>
#  tag input.file.latency
#</source>

<source>
  @type  tail
#  encoding utf-8
  path /log/sdo2json_sample.txt
  read_from_head true
  pos_file /tmp/sdo2json_sample.pos
  <parse>
    @type none
  </parse>
  tag input.file.sdo2json
</source>


#https://github.com/repeatedly/fluent-plugin-record-modifier
<filter **>
  @type record_modifier
  char_encoding utf-8
  <record>
    host "#{Socket.gethostname}"
  </record>
</filter>

#rewrite tag to rabbitmq token

#<match input.file.*>
#  @type rewrite_tag_filter
#  <rule>  
#    key $['level']
#    pattern ^(.+)$
#    tag log.${tag_parts[2]}.$1
#  </rule>
#</match>

#<filter input.file.*>
#  @type record_transformer
#  <record>
#    tag log.${tag_parts[2]}.${record["level"]}
#  </record>
#</filter>


<match **>
  @type amqp
  
  tag_key true
  # Set broker host and port
  host localhost
  port 5672

  # Set user and password for authentication
  user guest
  pass guest

  # Configure amqp entities vhost, exchange id and type
  vhost /
  exchange amq.direct
  exchange_type direct
  content_type application/json # optional - default is application/octet-stream. some amqp consumers will expect application/json.
</match>
