  filter {
  if [fields][index_name] == "nginx" {

  grok{
    match => [
      "message", '%{NOTSPACE:client_ip}[ ]+\[(?<logtimestamp>[^\]]+)\] \"%{NOTSPACE:req_method} %{NOTSPACE:url} %{NOTSPACE:protocol}\" %{NOTSPACE:status_code} %{NOTSPACE:size} "%{NOTSPACE:http_referer}" \"(?<user_agent>[^\"]+)\" \"(?<http_cookie>[^\"]+)\" "%{NOTSPACE:server_ip}" "%{NOTSPACE:interval}" "%{NOTSPACE:server_status}" "%{NOTSPACE:serial_no}" "%{NOTSPACE:conn_no}" "%{NOTSPACE:req_uuid}"',
      "message", '%{NOTSPACE:client_ip}[ ]+\[(?<logtimestamp>[^\]]+)\] \"%{NOTSPACE:req_method} %{NOTSPACE:url} %{NOTSPACE:protocol}\" %{NOTSPACE:status_code} %{NOTSPACE:size} "%{NOTSPACE:http_referer}" \"(?<user_agent>[^\"]+)\" \"(?<http_cookie>[^\"]+)\" \"(?<server_ip_multi>[^\"]+)\" \"(?<interval_multi>[^\"]+)\" \"(?<server_status_multi>[^\"]+)\" "%{NOTSPACE:serial_no}" "%{NOTSPACE:conn_no}" "%{NOTSPACE:req_uuid}"'
    ]
#    remove_field => [ "message" ]
  }
  
  if [interval] {
    mutate {
      convert => { "interval" => "float" }
    }
  }
  
  mutate {
    convert => { "size" => "integer" }
  }
  
#  geoip {
#    source => "client_ip"
#  }

  mutate {
    copy => { "url" => "url_normalized" }
  }
  
  mutate {
    gsub => [
      "url_normalized", "[^/?=&,\\r\\n]*[0-9]+[^/?=&,\\r\\n]*", "xxx"
#      "url_normalized", "[0-9]", "x"
    ]
  }

  kv {
    field_split => "; "
    include_keys => [ "RONLINE-DMZ", "XSRF-TOKEN", "JSESSIONID", "language", "NIB-LAN" ]
    source => "http_cookie"
    target => "http_cookie"
  }



  }
}
