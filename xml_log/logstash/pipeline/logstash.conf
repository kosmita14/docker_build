input {
  beats {
      port => '${LS_BEAT_PORT:5045}'
  }
}

filter {

  grok{
    id => "main_grok"
    match => [
      "message", "(?<logtimestamp>[^|]+)\|(?<level>[^|]*)\|(?<instance_id>[^|]*)\|(?<ip>[^|]*)\|(?<session_id>[^|]*)\|(?<user_id>[^|]*)\| (?<service_path>[^ ]*) %{GREEDYDATA:text}"
    ]

    remove_field => [ "message" ]
  }

  if([service_path] == "[com.asseco.esb.BusEsbSyncExecutor]"){
  
    grok{
      id => "second_grok"
      match => [
        "text", "\|%{GREEDYDATA:req_res}\|%{NOTSPACE:service_name}\|%{NOTSPACE:domain}\|%{NUMBER:time}ms\|%{GREEDYDATA:xml_text}",
        "text", "\|%{GREEDYDATA:req_res}\|%{NOTSPACE:service_name}\|%{NOTSPACE:domain}\|%{GREEDYDATA:xml_text}"
      ]

      remove_field => [ "text" ]
    }
  }

#        mutate {
#            id => "main_mutate"
#            gsub => [ "xml_text", " xsi:[^>/]+", "" ]
#        }


    xml {
       id => "main_xml"
       source => "xml_text"
       store_xml => "false"
       force_array => "false"
#      xpath => ["/ns:root/header/referenceId/value/text()","referenceId"]
#      xpath => ["/ns:root/header/operationStatus/value/text()","operationStatus"]
       xpath => ["/ns:root/header","xml_header"]
       xpath => ["/ns:root/selector","xml_selector"]
       xpath => ["/ns:root/payment","xml_payment"]
#      xpath => ["//payment/amount/value/text()","payment.amount"]
#      xpath => ["//payment/currency/value/text()","payment.currency"]
#       remove_field => ["xml_text"]
    }

    if [xml_payment] == 1{
#        mutate {
#            gsub => [ "xml_payment", " xsi:[^>/]+", "" ]
#        }

        xml {
            id => "payment_xml"
            source => "xml_payment"
            target => "payment"
            force_array => "false"
            remove_field => ["xml_payment"]
        }
    }

    if [xml_selector] == 1{
#        mutate {
#            gsub => [ "xml_selector", " xsi:[^>/]+", "" ]
#        }

        xml {
            id => "selector_xml"
            source => "xml_selector"
            target => "selector"
            force_array => "false"
            remove_field => ["xml_selector"]
        }
    }

    if [xml_header] == 1{
#        mutate {
#            gsub => [ "xml_header", " xsi:[^>/]+", "" ]
#        }

        xml {
            id => "header_xml"
            source => "xml_header"
            target => "header"
            force_array => "false"
            remove_field => ["xml_header"]
        }
    }

    if [ip] == 1{
        geoip {
            source => "ip"
        }
    }

  date {
    match => [ "logtimestamp", "YYYY-MM-dd HH:mm:ss,SSS"]
    timezone => "Europe/Warsaw"
    remove_field => [ "logtimestamp" ]
  }

}


output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "esb-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "changeme"
  }
}


